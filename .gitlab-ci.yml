image: hashicorp/terraform:0.15.0

# NOTE - New accounts must be initialized outside of GitLab CI/CD
# to setup the S3 state bucket and DynamoDB lock table.
# See bin/aws_init

variables:
  # Remianing items should be defined in project variables
  AWS_ACCESS_KEY_ID: setme
  AWS_SECRET_ACCESS_KEY: setme
  AWS_ACOUNT_ID: setme
  AWS_DEFAULT_REGION: setme
  TF_VAR_infra_name: setme
  TF_VAR_root_zone: setme
  TF_VAR_static_site_fqdn: setme

stages:
  - check_fmt
  - account_validate
  - account_plan
  - account_apply

before_script:
  # Sets up additional environment variables
  - . bin/commonlib
  - init_tf_vars $TF_VAR_infra_name $CI_ENVIRONMENT_NAME
  - cd stacks/$CI_ENVIRONMENT_NAME
  - terraform init
    -backend-config="bucket=${TF_VAR_state_bucket}"
    -backend-config="key=${TF_VAR_stack_name}"
    -backend-config="dynamodb_table=${TF_VAR_lock_table}"
    -backend-config="region=${TF_VAR_region}"

check_fmt:
  before_script: []
  stage: check_fmt
  script:
    - terraform fmt -recursive -diff -check
  except:
    - main

account_plan:
  environment: account
  stage: account_plan
  script:
    - terraform plan -out ${CI_PROJECT_DIR}/plans/${CI_ENVIRONMENT_NAME}.plan
  artifacts:
    paths:
      - plans
      - stacks/${CI_ENVIRONMENT_NAME}/.terraform
  only:
    - main

account_apply:
  environment: account
  stage: account_apply
  script:
    - terraform apply -auto-approve ${CI_PROJECT_DIR}/plans/${CI_ENVIRONMENT_NAME}.plan
  needs:
    - job: account_plan
      artifacts: true
  when: manual
  only:
    - main
